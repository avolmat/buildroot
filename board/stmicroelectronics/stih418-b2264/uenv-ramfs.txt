# Memory map
uimage_addr=0x94000000
dtb_addr=0x94f00000
ramfs_addr=0x95000000

# Kernel bootargs
set_ramfs_addr_offset=setexpr ramfs_addr_offset $ramfs_addr + 0x40; setexpr ramfs_size_offset $ramfs_size - 0x40;
set_bootargs=run set_ramfs_addr_offset; setenv bootargs console=ttyAS0,115200 loglevel=7 earlyprintk quiet root=/dev/ram0 rw initrd=0x${ramfs_addr_offset},0x${ramfs_size_offset} clk_ignore_unused
# Debug!
set_bootargs=run set_ramfs_addr_offset; setenv bootargs console=ttyAS0,115200 loglevel=7 earlyprintk initrd=0x${ramfs_addr_offset},0x${ramfs_size_offset} clk_ignore_unused initramfs_async=0 init_on_alloc=1 init_on_free=1 initcall_debug


# Load uImage and device tree
load_all=fatload mmc 0:1 $uimage_addr uimage && fatload mmc 0:1 $dtb_addr devicetree.dtb && fatload mmc 0:1 $ramfs_addr uramdisk.image && setenv ramfs_size $filesize

# Boot
bootcmd=run load_all && run set_bootargs && echo "booting using: " $bootargs && bootm $uimage_addr $ramfs_addr $dtb_addr

# Check if flashed PBL can run in secure mode
#   Read PBL from flash, then put CRC into 0x96000000
#   and check if CRC is ok (should be dce2641f),
#   if not upgrade to 4kopen-pbl-secure.bin
checkpbl=echo "*** check if PBL need upgrade / secure mode ***"; fatload mmc 0:1 0x98000000 4kopen-pbl-secure.bin && crc32 0x98000000 $filesize 0x96000010 && sf probe && sf read 0x98000000 0x0 $filesize && crc32 0x98000000 $filesize 0x96000000 && if itest *0x96000000 != *0x96000010 ; then echo "Upgrade PBL now"; run update_pbl ; else echo "PBL ok, no need to upgrade" ; fi
update_pbl=fatload mmc 0:1 0x98000000 4kopen-pbl-secure.bin && sf probe && sf update 0x98000000 0 $filesize && reset
